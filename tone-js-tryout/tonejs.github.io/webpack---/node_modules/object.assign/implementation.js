// modified from https://github.com/es-shims/es6-shim
var keys = __webpack_require__( /*! object-keys */ "./node_modules/object-keys/index.js");
var bind = __webpack_require__( /*! function-bind */ "./node_modules/function-bind/index.js");
var canBeObject = function(obj) {
    return typeof obj !== 'undefined' && obj !== null;
};
var hasSymbols = __webpack_require__( /*! has-symbols/shams */ "./node_modules/has-symbols/shams.js")();
var toObject = Object;
var push = bind.call(Function.call, Array.prototype.push);
var propIsEnumerable = bind.call(Function.call, Object.prototype.propertyIsEnumerable);
var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;

module.exports = function assign(target, source1) {
    if (!canBeObject(target)) {
        throw new TypeError('target must be an object');
    }
    var objTarget = toObject(target);
    var s, source, i, props, syms, value, key;
    for (s = 1; s < arguments.length; ++s) {
        source = toObject(arguments[s]);
        props = keys(source);
        var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
        if (getSymbols) {
            syms = getSymbols(source);
            for (i = 0; i < syms.length; ++i) {
                key = syms[i];
                if (propIsEnumerable(source, key)) {
                    push(props, key);
                }
            }
        }
        for (i = 0; i < props.length; ++i) {
            key = props[i];
            value = source[key];
            if (propIsEnumerable(source, key)) {
                objTarget[key] = value;
            }
        }
    }
    return objTarget;
};